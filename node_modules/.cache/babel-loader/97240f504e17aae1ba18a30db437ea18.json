{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meeraj\\\\Desktop\\\\Meraj\\\\Bootcamp2020\\\\example-react\\\\src\\\\components\\\\contextApi\\\\ThemeToggler.jsx\";\nimport React, { useContext } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nconst themeTogglerStyle = {\n  cursor: \"pointer\"\n};\n\nconst ThemeToggler = () => {\n  const [themeMode, setThemeMode] = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: themeTogglerStyle,\n    onClick: () => {\n      setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    title: \"switch theme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, themeMode === \"light\" ? \"🌙\" : \"☀️\"));\n};\n\nexport default ThemeToggler;","map":{"version":3,"sources":["C:/Users/Meeraj/Desktop/Meraj/Bootcamp2020/example-react/src/components/contextApi/ThemeToggler.jsx"],"names":["React","useContext","ThemeContext","themeTogglerStyle","cursor","ThemeToggler","themeMode","setThemeMode"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,MAAM,EAAE;AADc,CAA1B;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,UAAU,CAACC,YAAD,CAA3C;AACI,sBACI;AAAK,IAAA,KAAK,EAAIC,iBAAd;AACA,IAAA,OAAO,EAAI,MAAM;AAACI,MAAAA,YAAY,CAACD,SAAS,KAAK,OAAd,GAAuB,MAAvB,GAA+B,OAAhC,CAAZ;AAAqD,KADvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,KAAK,EAAG,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,SAAS,KAAK,OAAd,GAAwB,IAAxB,GAA+B,IADhC,CAFJ,CADJ;AAQP,CAVD;;AAYA,eAAeD,YAAf","sourcesContent":["import React, {useContext} from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nconst themeTogglerStyle = {\r\n    cursor: \"pointer\"\r\n}\r\nconst ThemeToggler = () => {\r\n    const[themeMode, setThemeMode] = useContext(ThemeContext);\r\n        return(\r\n            <div style = {themeTogglerStyle}\r\n            onClick = {() => {setThemeMode(themeMode === \"light\"? \"dark\": \"light\")}}>\r\n                <span title = \"switch theme\">\r\n                {themeMode === \"light\" ? \"🌙\" : \"☀️\"}\r\n            </span>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ThemeToggler;\r\n"]},"metadata":{},"sourceType":"module"}